openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
# local:
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.72.65.211"
  description: SwaggerHub API Auto Mocking hey
tags:
- name: Auth
  description: All authentication related routes
- name: Users
  description: All the user's personal app info
- name: Recipes
  description: All reciepes general info
paths:
  /register:
    post:
      tags:
      - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the new user.
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
    get:
      tags:
        - Auth
      summary: Check if the username is taken or not
      description: Check if the username is taken or not
      parameters:
        - in: query
          name: username
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get boolean that if the username return true then the username is taken
          content:
            application/json:
              schema:
                type: object
                properties:
                  UserNameTaken:
                      type: boolean
  /login:
    post:
      tags:
      - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginScheme'
        required: true
      responses:
        "200":
          description: |
            User was found in the DB and authenitcated successfully. The session ID is returned in a cookie named `session`.  You should include this cookie in subsequent requests
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /users/favorites:
    get:
      tags:
      - Users
      summary: Return the favorite recipes that were saved by user
      description: Get an array of recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's favorites recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
    post:
      tags:
        - Users
      summary: save recipe in the favorites list of a user
      description: save recipe in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeId:
                  type: string
                  description: recipeId's id which the user saved
                  example: 716429
      responses:
        "200":
          description: The Recipe successfully saved as favorite
        "401":
          description: user is not authorized
  /users/AddToWatched:
    post:
      tags:
        - Users
      summary: Add the recipe to the watched table
      description: Add the recipe to the watched table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeId:
                  type: string
                  description: recipeId's id which the user saved
                  example: 716429
      responses:
        '200':
          description: The recipe added to the table
        '401':
          description: Unauthorized
  /users/RecentThreeWatched:
    get:
      tags:
        - Users
      summary: Get the 3 last recipe that the user watched
      description: Returns the 3 last recipec the user was watched
      responses:
        '200':
          description: A list of 3 recipe that the user have watched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
  /users/AddPersonalRecipe:
    post:
      tags:
        - Users
      summary: Create a Personal Recipe
      requestBody:
        description: JSON request body for creating the recipe
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                image:
                  type: string
                  description: the image file loaction
                readyInMinutes:
                  type: integer
                  format: int64
                  description: The amount of time to cook the meal
                vegan:
                  type: boolean
                  description: If the recipe is vegan or not
                vegetarian:
                  type: boolean
                  description: indication if the recipe is vegetarian
                  example: false
                glutenFree:
                  type: boolean
                  description: If the recipe is gluten free
                extendedIngredients:
                  type: array
                  items:
                    {type: string}
                  description: list of all the ingredeients that need for cook this meal
                instructions:
                  type: string
                  description: instructions for cooking the meal
                servings:
                  type: integer
                  format: int64
                popularity:
                  type: integer
                  description: how many likes got this recipe
                  example: 5987
              required:
                - title
                - image
                - readyInMinutes
                - vegan
                - vegetarian
                - glutenFree
                - extendedIngredients
                - instructions
                - servings
                - popularity

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /users/GetPreviewPersonalRecipes:
    get:
      tags:
        - Users
      summary: Get the personal recipes only in the minimal format
      description: Get the personal recipes only in the minimal format
      responses:
        '200':
          description: A List of all presonal recipes of the connected user only in the minimal format
          content:
            application/json:
              schema:
                type: array
                items:
                    type: object
                    properties:
                      title:
                        type: string
                      image:
                        type: string
                        description: the image file loaction
                      readyInMinutes:
                        type: integer
                        format: int64
                        description: The amount of time to cook the meal
                      vegan:
                        type: boolean
                        description: If the recipe is vegan or not
                      vegetarian:
                        type: boolean
                        description: indication if the recipe is vegetarian
                        example: false
                      glutenFree:
                        type: boolean
                        description: If the recipe is gluten free
                      popularity:
                        type: integer
                        description: how many likes got this recipe
                        example: 5987
                    required:
                      - title
                      - image
                      - readyInMinutes
                      - vegan
                      - vegetarian
                      - glutenFree
                      - popularity
  /users/GetfullPersonalRecipes:
    get:
      tags:
        - Users
      summary: Get all user recipes in the full format
      description: Get all user recipes in the full format
      responses:
        '200':
          description: A list of all recipes of the suer connected
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeFull'
  /users/CheckFavoriteWatched/{recipeIds}:
    get:
      tags:
        - Users
      summary: Return if recipes with the given IDs are watched or favorite
      description: For a list of recipe IDs, return if each recipe is marked as watched or favorite.
      parameters:
        - name: recipeIds
          in: path
          description: List of recipe IDs
          required: true
          style: simple
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Return a list of dictionaries indicating if each recipe is watched or favorite
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    recipeId:
                      type: string
                    watched:
                      type: boolean
                    favorite:
                      type: boolean
  /users/GetFamilyRecipes:
    get:
      tags:
        - Users
      summary: get all recipes of the user family
      description: get all recipes of the user family
      responses:
        '200':
          description: get all recipes of the user family
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyRecipe'
  /users/GetFamilyRecipeFullView/{recipe_id}:
    get:
      tags:
        - Users
      summary: get specific recipes from the user family recipe
      description: get specific recipes from the user family recipe
      responses:
        '200':
          description: get all recipes of the user family
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyRecipe'
  /recipes/main_page_3_random:
    get:
      tags:
        - Recipes
      summary: Get 3 random recipes for the main website
      description: Returns 3 random recipes from the database
      responses:
        '200':
          description: A list of 3 random recipe
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
  /recipes/{recipe_id}:
    get:
      tags:
        - Recipes
      summary: Get a recipe by ID
      description: Returns a recipe with the specified ID
      parameters:
        - in: path
          name: recipe_id
          schema:
            type: integer
          required: true
          description: ID of the recipe to retrieve
      responses:
        '200':
          description: The recipe with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
        '404':
          description: Recipe not found
  /recipes/search:
    get:
      tags:
        - Recipes
      summary: Search for recipes by name
      description: Returns a list of recipes with names prefix is in the search term
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: The search term to use
        - in: query
          name: number
          schema:
            type: integer
            minimum: 5
            maximum: 15
            default: 5
          description: The maximum number of recipes to return (default is 5)
      responses:
        '200':
          description: A list of recipes matching the search term
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: my_name
        firstname:
          type: string
          description: user's first name
          example: my_first_name
        lastname:
          type: string
          description: user's last name
          example: my_last_name
        country:
          type: string
          description: user's country
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: my_name@12
        email:
          pattern: email
          type: string
          description: user's email
          example: my_name12@gmail.com
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins letters only
        password:
          maxLength: 10
          minLength: 5
          description: password conatins at least one number and one special char
          format: password
      example:
        username: my_name
        password: my_name@12
    RecipePreview:
      type: object
      properties:
        recipeId:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
    FamilyRecipe:
      type: object
      properties:
        recipeId:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        about:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        occasion:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        extendedIngredients:
          type: array
          items:
            { type: string }
          description: list of all the ingredeients that need for cook this meal
        instructions:
          type: string
          description: instructions for cooking the meal
        servings:
          type: integer
          format: int64
    RecipeFull:
      type: object
      properties:
        recipeId:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
        extendedIngredients:
          type: array
          items:
            { type: string }
          description: list of all the ingredeients that need for cook this meal
        instructions:
          type: string
          description: instructions for cooking the meal
        servings:
          type: integer
          format: int64